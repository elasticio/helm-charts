apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    component: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ .Chart.Name }}
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: elasticio/gitreceiver:{{ .Values.image.tag }}
        envFrom:
        - secretRef:
            name: {{ .Values.envFromSecretRefName }}
        env:
        - name: APP_NAME
          value: {{ .Chart.Name }}
        - name: LOG_LEVEL
          value: trace
        - name: APPBUILDER_IMAGE
          value: elasticio/appbuilder:latest
        - name: GIT_BRANCH
          value: master
        - name: WEBDAV_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.envFromSecretRefName }}
              key: SLUG_BASE_URL
        - name: GELF_ADDRESS
          value: "$(GELF_PROTOCOL)://$(GELF_HOST):$(GELF_PORT)"
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 20
          tcpSocket:
            port: 4022
        resources:
{{ toYaml .Values.resources | indent 10 }}
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: File
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-sock
          mountPath: "/var/run/docker.sock"
      volumes:
      - name: docker-sock
        hostPath:
          path: "/var/run/docker.sock"
          type: File
      imagePullSecrets:
      - name: {{ .Values.image.pullSecretName }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
